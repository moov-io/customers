openapi: 3.0.2
info:
  contact:
    url: https://github.com/moov-io/customers
  description: |
    Customers focuses on solving authentic identification of humans who are legally able to hold and transfer currency within the US. Primarily this project solves [Know Your Customer](https://en.wikipedia.org/wiki/Know_your_customer) (KYC), [Customer Identification Program](https://en.wikipedia.org/wiki/Customer_Identification_Program) (CIP), [Office of Foreign Asset Control](https://www.treasury.gov/about/organizational-structure/offices/Pages/Office-of-Foreign-Assets-Control.aspx) (OFAC) checks and verification workflows to comply with US federal law and ensure authentic transfers. Customers has an objective to be a service for detailed due diligence on individuals and companies for Financial Institutions and services in a modernized and extensible way.

    Customer phone numbers and addresses are stored and partially used in KYC/OFAC validation. Arbitrary key/value pairs can be stored for a Customer. Documents and Disclaimers, and their acknowledgement are also stored under a Customer as they're accepted. Bank Accounts, which can be validated with micro-deposits currently, are stored under each Customer.

    ![](https://raw.githubusercontent.com/adamdecaf/customers/create-accounts/docs/images/customer.png)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Customers API
  version: v1
servers:
- description: Local development
  url: http://localhost:8087
tags:
- description: Endpoints for searching, creating, and verifying individuals according
    to US government criteria for money movement within the country.
  name: Customers
paths:
  /ping:
    get:
      description: Check the Customers service to check if running
      operationId: ping
      responses:
        "200":
          description: Service is running properly
      summary: Ping Customers
      tags:
      - Customers
  /customers:
    post:
      description: Create a Customer object from the given details of a human or business
      operationId: createCustomer
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: Customer was successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Customer was not created, see error(s)
      summary: Create customer
      tags:
      - Customers
  /customers/{customerID}:
    get:
      description: Get the Customer object and metadata for the customerID.
      operationId: getCustomer
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID that identifies this Customer
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: A customer objects for the supplied customerID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Problem getting customer, see error(s)
        "404":
          description: No Customer with the specified customerID was found
      summary: Retrieve customer
      tags:
      - Customers
  /customers/{customerID}/address:
    post:
      description: Add an Address onto an existing Customer record
      operationId: addCustomerAddress
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to add the address onto
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerAddress'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: A customer object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Customer address was not updated, see error(s)
      summary: Add customer address
      tags:
      - Customers
  /customers/{customerID}/metadata:
    put:
      description: Replace the metadata object for a customer. Metadata is a map of
        unique keys associated to values to act as foreign key relationships or arbitrary
        data associated to a Customer.
      operationId: replaceCustomerMetadata
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to add the metadata onto
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerMetadata'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: A customer object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Customer metadata was not updated, see error(s)
      summary: Update customer metadata
      tags:
      - Customers
  /customers/{customerID}/status:
    put:
      description: Update the status for a customer, which can only be updated by
        authenticated users with permissions.
      operationId: updateCustomerStatus
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to update the CustomerStatus
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerStatus'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: A customer object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Customer status was not updated, see error(s)
      summary: Update customer status
      tags:
      - Customers
  /customers/{customerID}/accounts:
    delete:
      description: Remove an account from the given Customer
      operationId: deleteCustomerAccount
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to remove an Account
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          type: string
        style: simple
      responses:
        "200":
          description: Account removed form customer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Failed to get accounts, see error(s)
      summary: Delete Customer Account
      tags:
      - Customers
    get:
      description: Retrieve all accounts for the given customer.
      operationId: getCustomerAccounts
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to get Accounts for
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
          description: Active accounts for the customer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Failed to get accounts, see error(s)
      summary: Get Customer Accounts
      tags:
      - Customers
    post:
      description: Create an account for the given customer
      operationId: createCustomerAccount
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to add an Account onto
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account created for the customer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Failed to get accounts, see error(s)
      summary: Create Customer Account
      tags:
      - Customers
  /customers/{customerID}/accounts/{accountID}/decrypt:
    post:
      description: |
        Return the account number encrypted with a shared secret for application requests. This encryption key is different from the key used for persistence.
      operationId: decryptAccountNumber
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer the accountID belongs to
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: 51dd8cdd
          type: string
        style: simple
      - description: accountID of the Account to get decrypted account number
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          example: b74d7c51
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitAccountNumber'
          description: Decrypted account number
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Failed to decrypt account number, see error(s)
      summary: Decrypt Account Number
      tags:
      - Customers
  /customers/{customerID}/accounts/{accountID}/validate:
    post:
      description: |
        Initiate account validation with specified strategy and vendor.
      operationId: initAccountValidation
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer the accountID belongs to
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: 51dd8cdd
          type: string
        style: simple
      - description: accountID of the Account to validate
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          example: b74d7c51
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              strategy: micro-deposits
              vendor: moov
            schema:
              $ref: '#/components/schemas/InitAccountValidationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Micro-deposits:
                  value:
                    vendor_response:
                      result: initiated
                Plaid:
                  value:
                    vendor_response:
                      link_token: link-sandbox-32771002-45e1-4f9b-93fd-000000000000
                      expiration: 2020-08-25T13:07:19Z
                MX:
                  value:
                    vendor_response:
                      connect_widget_url: https://int-widgets.moneydesktop.com/xxxxxx
              schema:
                $ref: '#/components/schemas/InitAccountValidationResponse'
          description: Account validation initiated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Failed to initiate account validation, see error(s)
      summary: Initiate Account Validation
      tags:
      - Customers
    put:
      description: |
        Complete account validation with specified strategy and vendor.
      operationId: completeAccountValidation
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer the accountID belongs to
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: 51dd8cdd
          type: string
        style: simple
      - description: accountID of the Account to validate
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          example: b74d7c51
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Micro-deposits:
                value:
                  strategy: micro-deposits
                  vendor: moov
                  vendor_request:
                    micro-deposits:
                    - USD 0.03
                    - USD 0.07
              Plaid:
                value:
                  strategy: instant
                  vendor: plaid
                  vendor_request:
                    public_token: public-sandbox-59eb4718-93d8-41a0-a338-000000000000
              MX:
                value:
                  strategy: instant
                  vendor: mx
                  vendor_request:
                    user_guid: USR-d6a55e69-8711-4b21-b594-2538551231231
                    member_guid: MBR-1c38dad9-e699-4f01-baf7-d91231231231
            schema:
              $ref: '#/components/schemas/CompleteAccountValidationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                vendor_response:
                  result: validated
              schema:
                $ref: '#/components/schemas/CompleteAccountValidationResponse'
          description: Account validation initiated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Failed to complete account validation, see error(s)
      summary: Complete Account Validation
      tags:
      - Customers
  /customers/{customerID}/disclaimers:
    get:
      description: Get active disclaimers for the given customer
      operationId: getCustomerDisclaimers
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to get disclaimers
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disclaimers'
          description: Active disclaimers for the customer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Failed to get disclaimers, see error(s)
      summary: Get customer disclaimers
      tags:
      - Customers
  /customers/{customerID}/disclaimers/{disclaimerID}:
    post:
      description: Accept a disclaimer for the given customer which could include
        a document also
      operationId: acceptDisclaimer
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to accept a disclaimer
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          type: string
        style: simple
      - description: disclaimerID of the Disclaimer to accept
        explode: false
        in: path
        name: disclaimerID
        required: true
        schema:
          example: 9577ea7e1081
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disclaimer'
          description: Disclaimer accepted for customer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Customer disclaimer was not accepted, see error(s)
      summary: Accept customer disclaimer
      tags:
      - Customers
  /customers/{customerID}/documents:
    get:
      description: Get documents for a customer
      operationId: getCustomerDocuments
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to get all Documents
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents'
          description: Document uploaded successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Failed to get customer documents, see error(s)
      summary: Get customer documents
      tags:
      - Customers
    post:
      description: Upload a document for the given customer
      operationId: uploadCustomerDocument
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to add a document
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          type: string
        style: simple
      - description: Document type (see Document type for values)
        explode: true
        in: query
        name: type
        required: true
        schema:
          example: DriversLicense
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: Document to be uploaded
                  format: binary
                  type: string
              required:
              - file
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Document uploaded successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Document was not uploaded, see error(s)
      summary: Upload document
      tags:
      - Customers
  /customers/{customerID}/documents/{documentID}:
    get:
      description: Retrieve the referenced document
      operationId: getCustomerDocumentContents
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to get a Document
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6
          type: string
        style: simple
      - description: documentID to identify a Document
        explode: false
        in: path
        name: documentID
        required: true
        schema:
          example: 9577ea7e1081
          type: string
        style: simple
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
            image/*:
              schema:
                format: binary
                type: string
          description: Document contents (ready for a browser to download)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Failed to get customer document, see error(s)
      summary: Get customer document
      tags:
      - Customers
  /customers/{customerID}/ofac:
    get:
      description: Get the latest OFAC search for a customer
      operationId: getLatestOFACSearch
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to get latest OFAC search
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OFACSearch'
          description: OFAC search did not block customer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred when refreshing OFAC data, see error(s)
      summary: Get latest OFAC search
      tags:
      - Customers
  /customers/{customerID}/refresh/ofac:
    put:
      description: Refresh OFAC search for a given Customer
      operationId: refreshOFACSearch
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: false
        schema:
          type: string
        style: simple
      - description: customerID of the Customer to refresh OFAC search
        explode: false
        in: path
        name: customerID
        required: true
        schema:
          example: e210a9d6
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OFACSearch'
          description: OFAC search did not block customer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred when refreshing OFAC data, see error(s)
      summary: Refresh customer OFAC search
      tags:
      - Customers
components:
  schemas:
    CreateCustomer:
      example:
        firstName: Robert
        lastName: Smith
        addresses:
        - country: US
          address2: address2
          city: Denver
          address1: address1
          postalCode: postalCode
          state: CO
          type: Primary
        - country: US
          address2: address2
          city: Denver
          address1: address1
          postalCode: postalCode
          state: CO
          type: Primary
        metadata:
          paygateID: 23beb5fd
        nickName: Bob
        phones:
        - number: +1.818.555.1212
          type: Home
        - number: +1.818.555.1212
          type: Home
        middleName: Flex
        suffix: suffix
        birthDate: 2016-08-29T09:12:33.001Z
        email: email
        SSN: 111-11-1111
      properties:
        firstName:
          description: Given Name or First Name
          example: Robert
          maximum: 64
          type: string
        middleName:
          description: Middle Name
          example: Flex
          maximum: 64
          type: string
        lastName:
          description: Surname or Last Name
          example: Smith
          type: string
        nickName:
          description: Name Customer is preferred to be called
          example: Bob
          type: string
        suffix:
          description: Customers name suffix. "Jr", "PH.D."
          type: string
        type:
          $ref: '#/components/schemas/CustomerType'
        birthDate:
          description: Legal date of birth
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          nullable: true
          type: string
        email:
          description: Primary email address of customer name@domain.com
          maximum: 500
          type: string
        SSN:
          description: Customer Social Security Number (SSN)
          example: 111-11-1111
          type: string
        phones:
          items:
            $ref: '#/components/schemas/CreatePhone'
          type: array
        addresses:
          items:
            $ref: '#/components/schemas/CreateCustomerAddress'
          minimum: 1
          type: array
        metadata:
          additionalProperties:
            type: string
          description: Map of unique keys associated to values to act as foreign key
            relationships or arbitrary data associated to a Customer.
          example:
            paygateID: 23beb5fd
          type: object
      required:
      - SSN
      - addresses
      - birthDate
      - email
      - firstName
      - lastName
      type: object
    Customer:
      example:
        lastName: Smith
        addresses:
        - country: US
          validated: true
          address2: address2
          city: city
          address1: address1
          postalCode: postalCode
          state: state
          type: Primary
          addressID: 851233a1
        - country: US
          validated: true
          address2: address2
          city: city
          address1: address1
          postalCode: postalCode
          state: state
          type: Primary
          addressID: 851233a1
        metadata:
          paygateID: 23beb5fd
        nickName: Bob
        phones:
        - valid: true
          number: +1.818.555.1212
          type: Home
        - valid: true
          number: +1.818.555.1212
          type: Home
        suffix: suffix
        birthDate: 2016-08-29T09:12:33.001Z
        firstName: Robert
        createdAt: 2016-08-29T09:12:33.001Z
        customerID: e210a9d6
        middleName: Flex
        lastModified: 2016-08-29T09:12:33.001Z
        email: email
      properties:
        customerID:
          description: The unique identifier for the customer who owns the account
          example: e210a9d6
          type: string
        firstName:
          description: Given Name or First Name
          example: Robert
          maximum: 64
          type: string
        middleName:
          description: Middle Name
          example: Flex
          maximum: 64
          type: string
        lastName:
          description: Surname or Last Name
          example: Smith
          type: string
        nickName:
          description: Name Customer is preferred to be called
          example: Bob
          type: string
        suffix:
          description: Customers name suffix. "Jr", "PH.D."
          type: string
        type:
          $ref: '#/components/schemas/CustomerType'
        birthDate:
          description: Legal date of birth
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/CustomerStatus'
        email:
          description: Primary email address of customer name@domain.com
          maximum: 500
          type: string
        phones:
          items:
            $ref: '#/components/schemas/Phone'
          type: array
        addresses:
          items:
            $ref: '#/components/schemas/CustomerAddress'
          type: array
        metadata:
          additionalProperties:
            type: string
          description: Map of unique keys associated to values to act as foreign key
            relationships or arbitrary data associated to a Customer.
          example:
            paygateID: 23beb5fd
          type: object
        createdAt:
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        lastModified:
          description: Last time the object was modified
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
      required:
      - birthDate
      - createdAt
      - customerID
      - email
      - firstName
      - lastModified
      - lastName
      - status
      - type
      type: object
    CustomerType:
      description: Note if this Customer represents an individual or business
      enum:
      - individual
      - business
      type: string
    CustomerStatus:
      description: State of the customer
      enum:
      - Deceased
      - Rejected
      - Unknown
      - ReceiveOnly
      - Verified
      type: string
    CustomerMetadata:
      example:
        metadata:
          paygateID: 23beb5fd
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Map of unique keys associated to values to act as foreign key
            relationships or arbitrary data associated to a Customer.
          example:
            paygateID: 23beb5fd
          type: object
      required:
      - metadata
    UpdateCustomerStatus:
      example:
        comment: Customer was approved from KYC confirmation
      properties:
        comment:
          description: Free form comment about the customer status update
          example: Customer was approved from KYC confirmation
          type: string
        status:
          $ref: '#/components/schemas/CustomerStatus'
      required:
      - status
    CreatePhone:
      example:
        number: +1.818.555.1212
        type: Home
      properties:
        number:
          description: phone number
          example: +1.818.555.1212
          type: string
        type:
          enum:
          - Home
          - Mobile
          - Work
          type: string
      required:
      - number
      - type
    Phone:
      example:
        valid: true
        number: +1.818.555.1212
        type: Home
      properties:
        number:
          description: phone number
          example: +1.818.555.1212
          type: string
        valid:
          description: phone number has been validated to connect with customer
          type: boolean
        type:
          enum:
          - Home
          - Mobile
          - Work
          type: string
      required:
      - number
      - type
      - valid
    CreateCustomerAddress:
      example:
        country: US
        address2: address2
        city: Denver
        address1: address1
        postalCode: postalCode
        state: CO
        type: Primary
      properties:
        type:
          enum:
          - Primary
          - Secondary
          type: string
        address1:
          description: First line of the address
          type: string
        address2:
          description: Second line of the address
          type: string
        city:
          example: Denver
          type: string
        state:
          description: two charcer code of US state
          example: CO
          maximum: 2
          minimum: 2
          type: string
        postalCode:
          type: string
        country:
          enum:
          - US
          type: string
      required:
      - address1
      - city
      - country
      - postalCode
      - state
      - type
      type: object
    CustomerAddress:
      example:
        country: US
        validated: true
        address2: address2
        city: city
        address1: address1
        postalCode: postalCode
        state: state
        type: Primary
        addressID: 851233a1
      properties:
        addressID:
          description: Unique identifier for this Address
          example: 851233a1
          type: string
        type:
          enum:
          - Primary
          - Secondary
          type: string
        address1:
          description: First line of the address
          type: string
        address2:
          description: Second line of the address
          type: string
        city:
          type: string
        state:
          description: two charcer code of US state
          maximum: 2
          minimum: 2
          type: string
        postalCode:
          type: string
        country:
          enum:
          - US
          type: string
        validated:
          description: Address has been validated for customer
          type: boolean
      required:
      - address1
      - addressID
      - city
      - country
      - postalCode
      - state
      - type
      type: object
    AccountStatus:
      description: Enumeration if this account has been validated through micro-deposits
        or another available strategy.
      enum:
      - none
      - validated
      example: validated
      type: string
    AccountType:
      description: |
        Defines the account as *checking* or *savings*
      enum:
      - Checking
      - Savings
      example: checking
      type: string
    TransitAccountNumber:
      example:
        accountNumber: MKtcJkzlxUlGcW7Nf5xm5cg==
      properties:
        accountNumber:
          description: |
            The base64 encoded encrypted account number for the bank account for transit across services. The symmetric key used is configured from TRANSIT_LOCAL_BASE64_KEY and callers of endpoints that respond with encrypted values need this same key to decrypt.
          example: MKtcJkzlxUlGcW7Nf5xm5cg==
          type: string
    CreateAccount:
      example:
        routingNumber: "051504597"
        holderName: My Company,llc or Wade Arnold
        accountNumber: "0001027028"
        type: checking
      properties:
        holderName:
          description: Legal holder name on the account
          example: My Company,llc or Wade Arnold
          type: string
        accountNumber:
          description: The account number for the bank account
          example: "0001027028"
          type: string
        routingNumber:
          description: The ABA routing transit number for the bank account.
          example: "051504597"
          type: string
        type:
          $ref: '#/components/schemas/AccountType'
      required:
      - accountNumber
      - holderName
      - routingNumber
      - type
    Accounts:
      items:
        $ref: '#/components/schemas/Account'
      type: array
    Account:
      example:
        accountID: e1b1544a
        routingNumber: "051504597"
        institution:
          routingNumber: "123456780"
          phoneNumber: "5551112222"
          address:
            zip: "43724"
            address2: address2
            city: CALDWELL
            address1: 430 NORTH ST
            state: OH
          name: First Bank
        holderName: My Company,llc or Wade Arnold
        type: checking
        maskedAccountNumber: "0001027028"
        status: validated
      properties:
        accountID:
          description: A unique identifier for this account
          example: e1b1544a
          type: string
        holderName:
          description: Legal holder name on the account
          example: My Company,llc or Wade Arnold
          type: string
        maskedAccountNumber:
          description: The masked account number for the bank account
          example: "0001027028"
          type: string
        routingNumber:
          description: The ABA routing transit number for the bank account.
          example: "051504597"
          type: string
        status:
          $ref: '#/components/schemas/AccountStatus'
        type:
          $ref: '#/components/schemas/AccountType'
        institution:
          $ref: '#/components/schemas/InstitutionDetails'
      required:
      - accountID
      - holderName
      - maskedAccountNumber
      - routingNumber
      - status
      - type
    InstitutionDetails:
      example:
        routingNumber: "123456780"
        phoneNumber: "5551112222"
        address:
          zip: "43724"
          address2: address2
          city: CALDWELL
          address1: 430 NORTH ST
          state: OH
        name: First Bank
      properties:
        name:
          example: First Bank
          type: string
        routingNumber:
          example: "123456780"
          type: string
        phoneNumber:
          example: "5551112222"
          type: string
        address:
          $ref: '#/components/schemas/InstitutionAddress'
      required:
      - name
      - routingNumber
    InstitutionAddress:
      example:
        zip: "43724"
        address2: address2
        city: CALDWELL
        address1: 430 NORTH ST
        state: OH
      properties:
        address1:
          example: 430 NORTH ST
          type: string
        address2:
          type: string
        city:
          example: CALDWELL
          type: string
        state:
          example: OH
          type: string
        zip:
          example: "43724"
          type: string
      required:
      - address1
      - city
      - state
      - zip
    UpdateValidation:
      properties:
        strategy:
          description: |
            Validation strategy to use for the account.

            micro-deposits:
              Initiate two small credits to the account along with a later balancing debit. Only provide amounts to attempt validation.
          enum:
          - micro-deposits
          example: micro-deposits
          type: string
        micro-deposits:
          description: Amounts used to validate the account is owned by the customer.
          example:
          - USD 0.01
          - USD 0.13
          items:
            type: string
          type: array
      required:
      - strategy
      type: object
    Disclaimer:
      example:
        disclaimerID: 9342f3a7
        documentID: 08a184e1
        text: Set of conditions
        acceptedAt: 2016-08-29T09:12:33.001Z
      properties:
        disclaimerID:
          description: The unique identifier for this Disclaimer
          example: 9342f3a7
          type: string
        text:
          description: Text that user must accept
          example: Set of conditions
          type: string
        documentID:
          description: Optional documentID which references a Document included in
            the disclaimer
          example: 08a184e1
          type: string
        acceptedAt:
          description: Timestamp if disclaimer has been accepted, a timestamp before
            the year 2000 indicates no acceptance.
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
      required:
      - disclaimerID
      - text
      type: object
    Disclaimers:
      items:
        $ref: '#/components/schemas/Disclaimer'
      type: array
    Document:
      example:
        uploadedAt: 2016-08-29T09:12:33.001Z
        documentID: e210a9d6
        type: DriversLicense
        parseErrors:
        - parseErrors
        - parseErrors
        contentType: application/pdf
      properties:
        documentID:
          description: A unique identifier for this document
          example: e210a9d6
          type: string
        type:
          enum:
          - DriversLicense
          - Passport
          - UtilityBill
          - BankStatement
          type: string
        contentType:
          example: application/pdf
          type: string
        parseErrors:
          description: Optional array of errors encountered dring automated parsing.
          items:
            type: string
          type: array
        uploadedAt:
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
      required:
      - contentType
      - documentID
      - type
      - uploadedAt
      type: object
    Documents:
      items:
        $ref: '#/components/schemas/Document'
      type: array
    OFACSearch:
      example:
        sdnType: Individual
        createdAt: 2016-08-29T09:12:33.001Z
        match: 0.91
        entityID: "2141"
        sdnName: John Smith
      properties:
        entityID:
          description: SDN EntityID of the Entity
          example: "2141"
          type: string
        sdnName:
          description: Name of the SDN entity
          example: John Smith
          type: string
        sdnType:
          description: SDN entity type
          example: Individual
          type: string
        match:
          description: Percentage of similarity between the Customer name and this
            OFAC entity
          example: 0.91
          type: number
        createdAt:
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
      required:
      - createdAt
      - entityID
      - match
      - sdnName
      - sdnType
      type: object
    InitAccountValidationRequest:
      example:
        vendor: moov
        strategy: micro-deposits
      properties:
        strategy:
          description: |
            Validation strategy to use for the account.

            micro-deposits: Initiate two small credits to the account along with a later balancing debit.

            instant: Initiate instant account validation with specified vendor (e.g. Plaid, MX).
          enum:
          - micro-deposits
          - instant
          type: string
        vendor:
          default: moov
          enum:
          - moov
          - plaid
          - mx
          type: string
      required:
      - strategy
      type: object
    InitAccountValidationResponse:
      example:
        createdAt: 2016-08-29T09:12:33.001Z
        validationID: e210a9d6
        vendor: plaid
        vendor_response: '{}'
        strategy: instant
        status: init
        updatedAt: 2016-08-29T09:12:33.001Z
      properties:
        validationID:
          description: A unique identifier for the validation
          example: e210a9d6
          type: string
        strategy:
          description: Validation strategy
          example: instant
          type: string
        vendor:
          description: Validation vendor
          example: plaid
          type: string
        status:
          description: Validation status
          example: init
          type: string
        createdAt:
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        updatedAt:
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        vendor_response:
          description: key/value map of vendor specific params
          type: object
      type: object
    CompleteAccountValidationRequest:
      example:
        vendor_request: '{}'
      properties:
        vendor_request:
          description: key/value map of vendor specific params
          type: object
      required:
      - vendor_request
      type: object
    CompleteAccountValidationResponse:
      example:
        createdAt: 2016-08-29T09:12:33.001Z
        validationID: e210a9d6
        vendor: plaid
        vendor_response: '{}'
        strategy: instant
        status: completed
        updatedAt: 2016-08-29T09:12:33.001Z
      properties:
        validationID:
          description: A unique identifier for the validation
          example: e210a9d6
          type: string
        strategy:
          description: Validation strategy
          example: instant
          type: string
        vendor:
          description: Validation vendor
          example: plaid
          type: string
        status:
          description: Validation status
          example: completed
          type: string
        createdAt:
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        updatedAt:
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        vendor_response:
          description: key/value map of vendor specific params
          type: object
      type: object
    Error:
      properties:
        error:
          description: An error message describing the problem intended for humans.
          example: Validation error(s) present.
          type: string
      required:
      - error
